# references:
# https://github.com/realm/SwiftLint#configuration
# https://realm.github.io/SwiftLint/rule-directory.html
# https://github.com/sindresorhus/swiftlint-sindre
#
# `swiftlint rules` last updated version 0.39.2
#
# Disable an individual warning with [next|previous|this]:
# // swiftlint:disable:previous line_length

opt_in_rules:
  - anyobject_protocol
  - array_init
#- attributes
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
#- conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discouraged_object_literal
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - enum_case_associated_value_count
  - expiring_todo
#- explicit_acl
#- explicit_enum_raw_value
  - explicit_init
  - explicit_self
#- explicit_top_level_acl
#- explicit_type_interface
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_name
#- file_types_order
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - implicitly_unwrapped_optional
#- indentation_width
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - legacy_random
  - let_var_whitespace
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - missing_docs
  - modifier_order
  - multiline_arguments
#- multiline_arguments_brackets
  - multiline_function_chains
#- multiline_literal_brackets
  - multiline_parameters
#- multiline_parameters_brackets
#- nimble_operator
#- no_extension_access_modifier
#- no_grouping_extension
  - nslocalizedstring_key
  - nslocalizedstring_require_bundle
  - number_separator
#- object_literal
  - operator_usage_whitespace
  - optional_enum_case_matching
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
#- prefixed_toplevel_constant
  - private_action
  - private_outlet
#- prohibited_interface_builder
  - prohibited_nan_comparison
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - raw_value_for_camel_cased_codable_enum
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
#- required_deinit
  - required_enum_case
  - return_value_from_void_function
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
#- strict_fileprivate
  - strong_iboutlet
#- switch_case_on_newline
  - toggle_bool
  - trailing_closure
  - tuple_pattern
#- type_contents_order
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - unused_declaration
  - unused_import
  - vertical_parameter_alignment_on_call
#- vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
#- vertical_whitespace_opening_braces
  - void_function_in_ternary
  - xct_specific_matcher
  - yoda_condition

included:
  - MTP
  - MTPTests
  - MTPUITests

excluded:
  - Carthage
  - fastlane
  - MTP/resources
  - Pods

reporter: 'xcode'

cyclomatic_complexity:
  ignores_case_statements: true
  warning: 10

file_header:
  required_pattern: |
                    \/\/ @copyright Trollwerks Inc.

file_length:
  warning: 500
  error: 1200

function_parameter_count:
  warning: 6

identifier_name:
  allowed_symbols: '_'
  max_length:
    warning: 60
    error: 80
  excluded:
    - 'r'
    - 'g'
    - 'b'
    - 'a'
    - 'x'
    - 'y'
    - 'as'
    - 'at'
    - 'dx'
    - 'dy'
    - 'id'
    - 'in'
    - 'km'
    - 'no'
    - 'ok'
    - 'to'
    - 'vc'

implicitly_unwrapped_optional:
  mode: all_except_iboutlets

large_tuple:
  warning: 4
  error: 6

line_length:
  warning: 125
  error: 250
  ignores_comments: false
  ignores_urls: true

nesting:
  type_level:
    warning: 3
    error: 6
  statement_level:
    warning: 5

number_separator:
  minimum_length: 5

private_outlet:
  allow_private_set: true

trailing_comma:
  mandatory_comma: true

type_body_length:
  warning: 350
  error: 500

custom_rules:
  comments_space:
    name: "Space After Comment"
    regex: '(^ *//\w+)'
    message: "There should be a space after //"
    severity: warning
  empty_first_line:
     name: "Empty First Line"
     regex: "(^[ a-zA-Z ]*(?:protocol|extension|class|struct) (?!(?:var|let))[ a-zA-Z:]*\\{\n *\\S+)"
     message: "There should be an empty line after a declaration"
     severity: error
  empty_line_after_guard:
     name: "Empty Line After Guard"
     regex: "(^ *guard[ a-zA-Z0-9=?.\\(\\),><!]*\\{[ a-zA-Z0-9=?.\\(\\),><!]*\\}\n *(?!(?:return|guard))\\S+)"
     message: "There should be an empty line after a guard"
     severity: error
  empty_line_after_super:
     name: "Empty Line After Super"
     regex: "(^ *super\\.[ a-zA-Z0-9=?.\\(\\)\\{\\}:,><!]*\n *(?!(?:\\}|return))\\S+)"
     message: "There should be an empty line after super"
     severity: error
  explicit_failure_calls:
    name: “Avoid asserting ‘false’”
    regex: ‘((assert|precondition)\(false)’
    message: “Use assertionFailure() or preconditionFailure() instead.”
    severity: warning
  multiple_empty_lines:
    name: "Multiple Empty Lines"
    regex: '((?:\s*\n){3,})'
    message: "There are too many line breaks"
    severity: error
  unnecessary_type:
    name: "Unnecessary Type"
    regex: "[ a-zA-Z0-9]*(?:let|var) [ a-zA-Z0-9]*: ([a-zA-Z0-9]*)[\\? ]*= \\1"
    message: "Type Definition Not Needed"
    severity: error
